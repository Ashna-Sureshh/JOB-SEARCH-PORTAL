//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JOBSEARCHPORTAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobSearchPortalDBEntities1 : DbContext
    {
        public JobSearchPortalDBEntities1()
            : base("name=JobSearchPortalDBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CompanyRegistrationTable> CompanyRegistrationTables { get; set; }
        public virtual DbSet<jobapplicationtab> jobapplicationtabs { get; set; }
        public virtual DbSet<JobTab> JobTabs { get; set; }
        public virtual DbSet<LoginTable> LoginTables { get; set; }
        public virtual DbSet<UserRegistrationTable> UserRegistrationTables { get; set; }
    
        public virtual int sp_companyReg(Nullable<int> iD, string name, string address, string email, string website, string phone)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_companyReg", iDParameter, nameParameter, addressParameter, emailParameter, websiteParameter, phoneParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginCountId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginCountId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<string> sp_logtype(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_logtype", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual int sp_useReg(Nullable<int> id, string name, string age, string address, string phone, string email, string skills, string experience, string location, string photo, string qualification, string jobPreferences)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("Skills", skills) :
                new ObjectParameter("Skills", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("Experience", experience) :
                new ObjectParameter("Experience", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var photoParameter = photo != null ?
                new ObjectParameter("Photo", photo) :
                new ObjectParameter("Photo", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var jobPreferencesParameter = jobPreferences != null ?
                new ObjectParameter("JobPreferences", jobPreferences) :
                new ObjectParameter("JobPreferences", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_useReg", idParameter, nameParameter, ageParameter, addressParameter, phoneParameter, emailParameter, skillsParameter, experienceParameter, locationParameter, photoParameter, qualificationParameter, jobPreferencesParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> urid, string una, string pw, string utype)
        {
            var uridParameter = urid.HasValue ?
                new ObjectParameter("urid", urid) :
                new ObjectParameter("urid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var utypeParameter = utype != null ?
                new ObjectParameter("utype", utype) :
                new ObjectParameter("utype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", uridParameter, unaParameter, pwParameter, utypeParameter);
        }
    
        public virtual int sp_InsertJob(Nullable<int> companyID, string jobTitle, string jobDescription, string jobSkills, string jobExperience, string jobType, string jobWorkMode, string jobLocation, string jobSalaryRange, Nullable<System.DateTime> jobEndDate, string jobStatus)
        {
            var companyIDParameter = companyID.HasValue ?
                new ObjectParameter("CompanyID", companyID) :
                new ObjectParameter("CompanyID", typeof(int));
    
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var jobDescriptionParameter = jobDescription != null ?
                new ObjectParameter("JobDescription", jobDescription) :
                new ObjectParameter("JobDescription", typeof(string));
    
            var jobSkillsParameter = jobSkills != null ?
                new ObjectParameter("JobSkills", jobSkills) :
                new ObjectParameter("JobSkills", typeof(string));
    
            var jobExperienceParameter = jobExperience != null ?
                new ObjectParameter("JobExperience", jobExperience) :
                new ObjectParameter("JobExperience", typeof(string));
    
            var jobTypeParameter = jobType != null ?
                new ObjectParameter("JobType", jobType) :
                new ObjectParameter("JobType", typeof(string));
    
            var jobWorkModeParameter = jobWorkMode != null ?
                new ObjectParameter("JobWorkMode", jobWorkMode) :
                new ObjectParameter("JobWorkMode", typeof(string));
    
            var jobLocationParameter = jobLocation != null ?
                new ObjectParameter("JobLocation", jobLocation) :
                new ObjectParameter("JobLocation", typeof(string));
    
            var jobSalaryRangeParameter = jobSalaryRange != null ?
                new ObjectParameter("JobSalaryRange", jobSalaryRange) :
                new ObjectParameter("JobSalaryRange", typeof(string));
    
            var jobEndDateParameter = jobEndDate.HasValue ?
                new ObjectParameter("JobEndDate", jobEndDate) :
                new ObjectParameter("JobEndDate", typeof(System.DateTime));
    
            var jobStatusParameter = jobStatus != null ?
                new ObjectParameter("JobStatus", jobStatus) :
                new ObjectParameter("JobStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertJob", companyIDParameter, jobTitleParameter, jobDescriptionParameter, jobSkillsParameter, jobExperienceParameter, jobTypeParameter, jobWorkModeParameter, jobLocationParameter, jobSalaryRangeParameter, jobEndDateParameter, jobStatusParameter);
        }
    
        public virtual int sp_jobsearches(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobsearches", qryParameter);
        }
    
        public virtual int sp_InsertApplication(Nullable<int> userId, Nullable<int> jobID, Nullable<System.DateTime> appDate, string appResume, string appStatus)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var jobIDParameter = jobID.HasValue ?
                new ObjectParameter("JobID", jobID) :
                new ObjectParameter("JobID", typeof(int));
    
            var appDateParameter = appDate.HasValue ?
                new ObjectParameter("AppDate", appDate) :
                new ObjectParameter("AppDate", typeof(System.DateTime));
    
            var appResumeParameter = appResume != null ?
                new ObjectParameter("AppResume", appResume) :
                new ObjectParameter("AppResume", typeof(string));
    
            var appStatusParameter = appStatus != null ?
                new ObjectParameter("AppStatus", appStatus) :
                new ObjectParameter("AppStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertApplication", userIdParameter, jobIDParameter, appDateParameter, appResumeParameter, appStatusParameter);
        }
    }
}
